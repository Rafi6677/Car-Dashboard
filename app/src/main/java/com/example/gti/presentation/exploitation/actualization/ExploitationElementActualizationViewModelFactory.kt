package com.example.gti.presentation.exploitation.actualization

import androidx.lifecycle.ViewModel
import androidx.lifecycle.ViewModelProvider
import com.example.gti.domain.usecase.*
import java.lang.IllegalArgumentException

@Suppress("UNCHECKED_CAST")
class ExploitationElementActualizationViewModelFactory(
    private val insertExploitationPartChangeUseCase: InsertExploitationPartChangeUseCase,
    private val getLatestOilChangeUseCase: GetLatestOilChangeUseCase,
    private val getLatestOilFilterChangeUseCase: GetLatestOilFilterChangeUseCase,
    private val getLatestAirFilterChangeUseCase: GetLatestAirFilterChangeUseCase,
    private val getLatestCabinFilterChangeUseCase: GetLatestCabinFilterChangeUseCase
) : ViewModelProvider.Factory {

    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
        if (modelClass.isAssignableFrom(ExploitationElementActualizationViewModel::class.java)) {
            return ExploitationElementActualizationViewModel(
                insertExploitationPartChangeUseCase,
                getLatestOilChangeUseCase,
                getLatestOilFilterChangeUseCase,
                getLatestAirFilterChangeUseCase,
                getLatestCabinFilterChangeUseCase
            ) as T
        }

        throw IllegalArgumentException("Unknown View Model Class")
    }

}