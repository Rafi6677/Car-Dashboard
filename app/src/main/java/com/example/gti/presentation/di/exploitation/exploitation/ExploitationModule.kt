package com.example.gti.presentation.di.exploitation.exploitation

import com.example.gti.domain.usecase.*
import com.example.gti.presentation.exploitation.exploitation.ExploitationViewModelFactory
import dagger.Module
import dagger.Provides

@Module
class ExploitationModule {

    @ExploitationScope
    @Provides
    fun provideExploitationViewModelFactory(
        getLatestOilCheckUseCase: GetLatestOilCheckUseCase,
        getLatestOilChangeUseCase: GetLatestOilChangeUseCase,
        getLatestOilFilterChangeUseCase: GetLatestOilFilterChangeUseCase,
        getLatestAirFilterChangeUseCase: GetLatestAirFilterChangeUseCase,
        getLatestCabinFilterChangeUseCase: GetLatestCabinFilterChangeUseCase
    ): ExploitationViewModelFactory {
        return ExploitationViewModelFactory(
            getLatestOilCheckUseCase,
            getLatestOilChangeUseCase,
            getLatestOilFilterChangeUseCase,
            getLatestAirFilterChangeUseCase,
            getLatestCabinFilterChangeUseCase
        )
    }

}