package com.example.gti.data.repository

import android.util.Log
import com.example.gti.data.db.model.ExploitationPartChange
import com.example.gti.data.repository.datasource.ExploitationPartChangeDataSource
import com.example.gti.domain.repository.ExploitationPartChangeRepository
import java.lang.Exception

class ExploitationPartChangeRepositoryImpl(private val exploitationPartChangeDataSource: ExploitationPartChangeDataSource) : ExploitationPartChangeRepository {

    override suspend fun insertExploitationPartChange(exploitationPartChange: ExploitationPartChange) {
        exploitationPartChangeDataSource.insertExploitationPartChangeIntoDB(exploitationPartChange)
    }

    override suspend fun updateOilChange(exploitationPartChange: ExploitationPartChange) {
        exploitationPartChangeDataSource.updateOilChangeToDB(exploitationPartChange)
    }

    override suspend fun deleteOilChange(exploitationPartChange: ExploitationPartChange) {
        exploitationPartChangeDataSource.deleteOilChangeFromDB(exploitationPartChange)
    }

    override suspend fun deleteAllOilChange() {
        exploitationPartChangeDataSource.deleteAllOilChangeFromDB()
    }

    override suspend fun getAllOilChange(): List<ExploitationPartChange> {
        lateinit var exploitationPartChangeList: List<ExploitationPartChange>

        try {
            exploitationPartChangeList = exploitationPartChangeDataSource.getAllOilChangeFromDB()
        } catch (e: Exception) {
            Log.i("ExceptionTag", e.message.toString())
        }

        return exploitationPartChangeList
    }

    override suspend fun getLatestOilChange(): ExploitationPartChange? {
        var latestExploitationPartChange: ExploitationPartChange? = null

        try {
            latestExploitationPartChange = exploitationPartChangeDataSource.getLatestOilChangeFromDB()
        } catch (e: Exception) {
            Log.i("ExceptionTag", e.message.toString())
        }

        return latestExploitationPartChange
    }

    override suspend fun getLatestOilFilterChange(): ExploitationPartChange? {
        var latestExploitationPartChange: ExploitationPartChange? = null

        try {
            latestExploitationPartChange = exploitationPartChangeDataSource.getLatestOilFilterChangeFromDB()
        } catch (e: Exception) {
            Log.i("ExceptionTag", e.message.toString())
        }

        return latestExploitationPartChange
    }

    override suspend fun getLatestAirFilterChange(): ExploitationPartChange? {
        var latestExploitationPartChange: ExploitationPartChange? = null

        try {
            latestExploitationPartChange = exploitationPartChangeDataSource.getLatestAirFilterChangeFromDB()
        } catch (e: Exception) {
            Log.i("ExceptionTag", e.message.toString())
        }

        return latestExploitationPartChange
    }

    override suspend fun getLatestCabinFilterChange(): ExploitationPartChange? {
        var latestExploitationPartChange: ExploitationPartChange? = null

        try {
            latestExploitationPartChange = exploitationPartChangeDataSource.getLatestCabinFilterChangeFromDB()
        } catch (e: Exception) {
            Log.i("ExceptionTag", e.message.toString())
        }

        return latestExploitationPartChange
    }

}